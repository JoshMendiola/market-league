services:
  # Frontend: Angular
  angular-dev:
    build:
      context: ./market-league-front-end  # Path to your Angular project directory
      dockerfile: Dockerfile.dev          # Use your development Dockerfile
    container_name: angular-dev
    ports:
      - 4200:4200  # Expose port 4200 for the Angular dev server
    volumes:
      - ./market-league-front-end:/app    # Bind mount the local directory to the container
      - /app/node_modules                 # Avoid overwriting node_modules with the local version
    command: ng serve --host 0.0.0.0 

  # Backend: Gin (Go)
  gin-backend:
    build:
      context: ./market-league-back-end  # Path to your Go project directory
      dockerfile: Dockerfile.dev        # Use your development Dockerfile
    container_name: gin-dev
    ports:
      - 9000:9000  # Expose Gin's port
    volumes:
      - ./market-league-back-end:/app    # Bind mount your local directory to the container
      - /app/tmp                        # Exclude temporary directories
    command: air                        # Use Air for live-reloading

  # Database: PostgreSQL
  db:
    image: postgres:16
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # Fetch from the .env file
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Fetch from the .env file
      POSTGRES_DB: ${POSTGRES_DB}  # Fetch from the .env file
    ports:
      - 5432:5432   # Exposes PostgreSQL on port 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data   # Persists database data

# Volume for Postegres database
volumes:
  postgres_data: