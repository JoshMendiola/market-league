# Database Diagram v3.1

title: "Database Diagram v3.1" {
  shape: text
  near: top-center
  style: {
    font-size: 55
  }
}

# ####################
# #    Entities     ##
# ####################

# Organize Entities
Stocks
Users
Leagues
Trades
Portfolios
User_Leagues
Trade_Player_1_Stocks
Trade_Player_2_Stocks
PriceHistory
League_Portfolio
League_Portfolio_Stocks

Users: {
  shape: sql_table

  id: int {constraint: primary_key}
  username: varchar
  email: varchar
  password: varchar
  leagues: jsonb
}

Stocks: {
  shape: sql_table

  id: int {constraint: primary_key}
  ticker_symbol: text
  company_name: text
  current_price: numeric
  price_histories: jsonb
}

PriceHistory: {
  shape: sql_table

  id: int {constraint: primary_key}
  stock_id: int {constraint: foreign_key}
  price: numeric
  timestamp: timestamp
}

Portfolios: {
  shape: sql_table

  id: int {constraint: primary_key}
  user_id: int {constraint: foreign_key}
  league_id: int {constraint: foreign_key}
  stocks: jsonb
  created_at: timestamp
  total_value: numeric
}

Trades: {
  shape: sql_table

  id: int {constraint: primary_key}
  league_id: int {constraint: foreign_key}
  user1_id: int {constraint: foreign_key}
  user2_id: int {constraint: foreign_key}
  portfolio1_id: int {constraint: foreign_key}
  portfolio2_id: int {constraint: foreign_key}
  stocks1: jsonb
  stocks2: jsonb
  user1_confirmed: boolean
  user2_confirmed: boolean
  status: varchar
  created_at: timestamp
  updated_at: timestamp
}

Leagues: {
  shape: sql_table

  id: int {constraint: primary_key}
  league_name: varchar
  start_date: date
  end_date: date
}

League_Portfolio: {
  shape: sql_table

  id: int {constraint: primary_key}
  league_id: int {constraint: foreign_key}
  stocks: jsonb
  created_at: timestamp
}

Trade_Player_1_Stocks: {
  shape: sql_table

  trade_id: int {constraint: foreign_key}
  stock_id: int {constraint: foreign_key}
}

Trade_Player_2_Stocks: {
  shape: sql_table

  trade_id: int {constraint: foreign_key}
  stock_id: int {constraint: foreign_key}
}

Portfolio_Stocks: {
  shape: sql_table

  stock_id: int {constraint: foreign_key}
  portfolio_id: int {constraint: foreign_key}
}

User_leagues: {
  shape: sql_table

  stock_id: int {constraint: foreign_key}
  portfolio_id: int {constraint: foreign_key}
}

League_Portfolio_Stocks: {
  shape: sql_table

  league_portfolio_id: int {constraint: foreign_key}
  stock_id: int {constraint: foreign_key}
}

# ####################
# #  Entities  END  ##
# ####################

# Define relationships between tables
Stocks -> Portfolio_Stocks: "Many-to-Many"
Stocks -> Trades: "Many-to-Many"
Users -> Trades: "One-to-Many"
Trades -> Trade_Player_1_Stocks: "One-to-Many"
Trades -> Trade_Player_2_Stocks: "One-to-Many"
Users -> Portfolios: "One-to-Many"
Users -> User_Leagues: "Many-to-Many"
Leagues -> User_Leagues: "Many-to-Many"
Portfolios -> Portfolio_Stocks: "One-to-Many"
Leagues -> League_Portfolio: "One-to-Many"
Stocks -> PriceHistory: "One-to-Many"
League_Portfolio -> League_Portfolio_Stocks: "One-to-Many"
