# Class Diagram v1.0

title: "Class Diagram v1.0" {
    shape: text
    near: top-center
    style: {
      font-size: 55
    }
  }
  
  # ######################
  # #   Entities Setup  ##
  # ######################
  # Key:
  # + --> Public 
  # - --> Private
  # # --> Protected
  # 1..1: Exactly one. A one-to-one relationship.
  # 0..1: Zero or one. A nullable one-to-one relationship.
  # 1..*: One or more. A one-to-many relationship where at least one exists.
  # 0..*: Zero or more. A one-to-many relationship that allows for none to exist.
  # * or many: Many-to-many relationship, allowing multiple instances on both sides.
  
  User: {
    shape: class
    + userID: int
    + username: string
    + password: string
    + email: string
    + balance: float
  
    + register(): void
    + login(): void
    + viewPortfolio(): Portfolio
    + tradeStocks(stock Stock, action string): Trade
    + joinLeague(league League): void
  }
  
  Stock: {
    shape: class
    + stockID: int
    + tickerSymbol: string
    + companyName: string
    + currentPrice: float
    + priceHistory: list<float>
  
    + getPrice(): float
    + getPriceHistory(): list<float>
  }
  
  Portfolio: {
    shape: class
    + portfolioID: int
    + userID: int
    + stocksOwned: list<Stock>
    + totalValue: float
  
    + addStock(stock Stock): void
    + removeStock(stock Stock): void
    + getPortfolioValue(): float
  }
  
  Trade: {
    shape: class
    + tradeID: int
    + userID: int
    + stockID: int
    + tradeType: string
    + quantity: int
    + tradePrice: float
    + tradeDate: datetime
  
    + executeTrade(): void
    + calculateTradeValue(): float
  }
  
  League: {
    shape: class
    + leagueID: int
    + leagueName: string
    + startDate: date
    + endDate: date
    + users: list<User>
  
    + createLeague(): void
    + joinLeague(user User): void
    + viewLeaderboard(): Leaderboard
  }
  
  Leaderboard: {
    shape: class
    + leaderboardID: int
    + leagueID: int
    + rankings: dict<User, int>
    + lastUpdated: datetime
  
    + updateRankings(): void
    + viewLeaderboard(): dict<User, int>
  }
  
  # ######################
  # #    Entities End   ##
  # ######################
  
  User -> Portfolio: "1..*"
  Portfolio -> Stock: "1..*"
  User -> Trade: "1..*"
  Stock -> Trade: "1..*"
  User -> League: "0..*"
  League -> Leaderboard: "1..1"
  